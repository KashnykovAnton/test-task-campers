{"version":3,"file":"static/js/catalog-page.625e5d80.chunk.js","mappings":"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","sources":["webpack://test-task-campers/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://test-task-campers/./src/components/Headline/Headline.module.css?193c","components/Headline/Headline.jsx","webpack://test-task-campers/./src/components/IconStar/IconStar.module.css?a1e3","components/IconStar/IconStar.jsx","webpack://test-task-campers/./src/components/IconPin/IconPin.module.css?44e9","components/IconPin/IconPin.jsx","webpack://test-task-campers/./src/components/Location/Location.module.css?89e8","components/Location/Location.jsx","webpack://test-task-campers/./src/components/ModalRatingAndLocation/ModalRatingAndLocation.module.css?456f","components/ModalRatingAndLocation/ModalRatingAndLocation.jsx","webpack://test-task-campers/./src/components/Price/Price.module.css?70e1","components/Price/Price.jsx","webpack://test-task-campers/./src/components/ModalInfoSection/ModalInfoSection.module.css?58d3","webpack://test-task-campers/./src/components/FeaturesComponent/FeaturesComponent.module.css?991b","webpack://test-task-campers/./src/components/FeatureBadgeList/FeatureBadgeList.module.css?c91e","assets/AC.svg","webpack://test-task-campers/./src/components/FeatureBadge/FeatureBadge.module.css?5ae9","components/FeatureBadge/FeatureBadge.jsx","components/FeatureBadgeList/FeatureBadgeList.jsx","components/FeaturesComponent/FeaturesComponent.jsx","webpack://test-task-campers/./src/components/ReviewsComponent/ReviewsComponent.module.css?5cb4","webpack://test-task-campers/./src/components/IconStarList/IconStarList.module.css?67a5","components/IconStarList/IconStarList.jsx","components/ReviewsComponent/ReviewsComponent.jsx","components/ModalInfoSection/ModalInfoSection.jsx","webpack://test-task-campers/./src/components/GalleryList/GalleryList.module.css?1d24","webpack://test-task-campers/./src/components/GalleryItem/GalleryItem.module.css?5bd8","components/GalleryItem/GalleryItem.jsx","components/GalleryList/GalleryList.jsx","webpack://test-task-campers/./src/components/AdvertModal/AdvertModal.module.css?5682","components/AdvertModal/AdvertModal.jsx","webpack://test-task-campers/./src/components/AdvertsHeader/AdvertsHeader.module.css?74fc","webpack://test-task-campers/./src/components/FavoriteButton/FavoriteButton.module.css?ae3c","store/adverts/adverts-selectors.js","components/FavoriteButton/FavoriteButton.jsx","components/AdvertsHeader/AdvertsHeader.jsx","webpack://test-task-campers/./src/components/AdvertsItem/AdvertsItem.module.css?3b94","components/AdvertsItem/AdvertsItem.jsx","webpack://test-task-campers/./src/components/AdvertsList/AdvertsList.module.css?dc11","components/AdvertsList/AdvertsList.jsx","webpack://test-task-campers/./src/components/Geolocation/Geolocation.module.css?bf02","components/Geolocation/Geolocation.jsx","service/location-api.js","webpack://test-task-campers/./src/components/Filter/Filter.module.css?fad1","assets/AC-big.svg","webpack://test-task-campers/./src/components/FilterBadge/FilterBadge.module.css?8308","components/FilterBadge/FilterBadge.jsx","webpack://test-task-campers/./src/components/FilterBadgeList/FilterBadgeList.module.css?9c3a","components/FilterBadgeList/FilterBadgeList.jsx","components/Filter/Filter.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"Headline_name__sUn9P\"};","import React from 'react';\nimport styles from './Headline.module.css';\n\nconst Headline = ({ headline }) => {\n  return <h2 className={styles.name}>{headline}</h2>;\n};\n\nexport default Headline;\n","// extracted by mini-css-extract-plugin\nexport default {\"iconWrapper\":\"IconStar_iconWrapper__6sBp6\",\"notFilledIcon\":\"IconStar_notFilledIcon__W0guI\"};","import React from 'react';\nimport Icons from '../../assets/icons-sprite.svg';\nimport styles from './IconStar.module.css';\n\nconst IconStar = ({ filled = true }) => {\n  return (\n    <span className={styles.iconWrapper}>\n      <svg\n        className={filled ? '' : styles.notFilledIcon}\n        width=\"16\"\n        height=\"16\"\n      >\n        <use href={`${Icons}#star`}></use>\n      </svg>\n    </span>\n  );\n};\n\nexport default IconStar;\n","// extracted by mini-css-extract-plugin\nexport default {\"iconWrapper\":\"IconPin_iconWrapper__+889o\"};","import React from 'react';\nimport Icons from '../../assets/icons-sprite.svg';\nimport styles from './IconPin.module.css';\n\nconst IconPin = ({ size }) => {\n  return (\n    <span className={styles.iconWrapper}>\n      <svg\n        width={size === 'small' ? 16 : 18}\n        height={size === 'small' ? 16 : 20}\n      >\n        <use\n          href={`${Icons}#${size === 'small' ? 'map-pin-small' : 'map-pin'}`}\n        ></use>\n      </svg>\n    </span>\n  );\n};\n\nexport default IconPin;\n","// extracted by mini-css-extract-plugin\nexport default {\"locationWrapper\":\"Location_locationWrapper__tCyS2\"};","import React from 'react';\nimport IconPin from 'components/IconPin/IconPin';\nimport styles from './Location.module.css';\n\nconst Location = ({ location, size }) => {\n  const reverseLocation = location.split(', ').reverse().join(', ');\n  return (\n    <div className={styles.locationWrapper}>\n      <IconPin size={size} />\n      <span>{reverseLocation}</span>\n    </div>\n  );\n};\n\nexport default Location;\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"ModalRatingAndLocation_info__BscwN\",\"ratingText\":\"ModalRatingAndLocation_ratingText__EVSl-\"};","import React from 'react';\nimport IconStar from 'components/IconStar/IconStar';\nimport Location from 'components/Location/Location';\nimport styles from './ModalRatingAndLocation.module.css';\n\nconst ModalRatingAndLocation = ({ reviews, location }) => {\n  const averageRating = () => {\n    const rating = reviews.reduce(\n      (acc, review) => acc + review.reviewer_rating,\n      0\n    );\n    return Math.floor((rating / reviews.length) * 10) / 10;\n  };\n\n  return (\n    <div className={styles.info}>\n      <IconStar />\n      <span className={styles.ratingText}>\n        {averageRating()}({reviews.length} Reviews)\n      </span>\n      <Location location={location} size='small'/>\n    </div>\n  );\n};\n\nexport default ModalRatingAndLocation;\n","// extracted by mini-css-extract-plugin\nexport default {\"price\":\"Price_price__9Dzxz\"};","import styles from './Price.module.css';\n\nconst Price = ({ price }) => {\n  return <p className={styles.price}>€{price.toFixed(2)}</p>;\n};\n\nexport default Price;\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonsWrapper\":\"ModalInfoSection_buttonsWrapper__cTWNE\",\"button\":\"ModalInfoSection_button__HfVmV\",\"active\":\"ModalInfoSection_active__jTKoZ\",\"content\":\"ModalInfoSection_content__rQlAr\"};","// extracted by mini-css-extract-plugin\nexport default {\"featuresSection\":\"FeaturesComponent_featuresSection__o7nEz\",\"detailsHeadline\":\"FeaturesComponent_detailsHeadline__LhMru\",\"detailsList\":\"FeaturesComponent_detailsList__BEZY1\",\"detailsStroke\":\"FeaturesComponent_detailsStroke__Av6m2\",\"detailsName\":\"FeaturesComponent_detailsName__QYZpv\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"FeatureBadgeList_list__xF9ec\",\"featuresList\":\"FeatureBadgeList_featuresList__fgQkr\"};","var _g;\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAc(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vertical container\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"path-1-inside-1_3_2789\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.69 2C8.7518 2.00021 7.84263 2.32033 7.11706 2.90595C6.39148 3.49157 5.89429 4.30654 5.71 5.21231L5.6375 5.57169C5.61823 5.65208 5.61559 5.73546 5.62974 5.81688C5.64389 5.89829 5.67454 5.97606 5.71986 6.04556C5.76519 6.11507 5.82426 6.17487 5.89355 6.22142C5.96285 6.26797 6.04095 6.30031 6.12321 6.31651C6.20547 6.3327 6.29019 6.33243 6.37234 6.31571C6.45449 6.29898 6.53238 6.26614 6.60137 6.21915C6.67035 6.17216 6.72903 6.11198 6.77389 6.04219C6.81875 5.97239 6.84889 5.89442 6.8625 5.81292L6.93625 5.45477C7.0748 4.7832 7.46155 4.18615 8.02159 3.77926C8.58162 3.37237 9.27509 3.1846 9.96769 3.25232C10.6603 3.32004 11.3027 3.63843 11.7705 4.14581C12.2384 4.6532 12.4983 5.31348 12.5 5.99877C12.5 6.73333 12.2037 7.43782 11.6763 7.95735C11.1489 8.47687 10.4335 8.7689 9.6875 8.76923H0.625C0.45924 8.76923 0.300269 8.83407 0.183058 8.94947C0.0658481 9.06488 0 9.22141 0 9.38462C0 9.54783 0.0658481 9.70435 0.183058 9.81976C0.300269 9.93517 0.45924 10 0.625 10H9.6875C10.7475 9.97443 11.7554 9.54194 12.496 8.79485C13.2367 8.04775 13.6514 7.04521 13.6517 6.0012C13.652 4.95719 13.2379 3.9544 12.4978 3.20686C11.7576 2.45931 10.75 2.02621 9.69 2ZM16.875 7.53846C16.0462 7.53846 15.2513 7.86264 14.6653 8.43967C14.0792 9.01671 13.75 9.79933 13.75 10.6154C13.75 10.7786 13.8158 10.9351 13.9331 11.0505C14.0503 11.1659 14.2092 11.2308 14.375 11.2308C14.5408 11.2308 14.6997 11.1659 14.8169 11.0505C14.9342 10.9351 15 10.7786 15 10.6154C15 10.2502 15.11 9.89332 15.316 9.58972C15.522 9.28612 15.8149 9.04949 16.1575 8.90976C16.5001 8.77003 16.8771 8.73347 17.2408 8.8047C17.6045 8.87594 17.9386 9.05177 18.2008 9.30996C18.463 9.56815 18.6416 9.8971 18.714 10.2552C18.7863 10.6133 18.7492 10.9845 18.6073 11.3219C18.4654 11.6592 18.225 11.9475 17.9167 12.1504C17.6084 12.3533 17.2458 12.4615 16.875 12.4615H0.625C0.45924 12.4615 0.300269 12.5264 0.183058 12.6418C0.0658481 12.7572 0 12.9137 0 13.0769C0 13.2401 0.0658481 13.3967 0.183058 13.5121C0.300269 13.6275 0.45924 13.6923 0.625 13.6923H12.8125C13.2269 13.6931 13.624 13.856 13.9164 14.1451C14.2089 14.4342 14.3727 14.8258 14.3719 15.2338C14.371 15.6419 14.2056 16.0329 13.912 16.3208C13.6184 16.6087 13.2207 16.77 12.8062 16.7692C12.433 16.7695 12.0716 16.6396 11.7863 16.4026C11.501 16.1656 11.3101 15.8368 11.2475 15.4745L11.2413 15.4375C11.23 15.3559 11.2023 15.2773 11.1596 15.2065C11.117 15.1356 11.0603 15.0739 10.993 15.025C10.9257 14.9761 10.849 14.941 10.7677 14.9218C10.6863 14.9025 10.6019 14.8996 10.5194 14.9131C10.4368 14.9266 10.3579 14.9563 10.2872 15.0004C10.2166 15.0445 10.1556 15.1022 10.108 15.1699C10.0604 15.2376 10.0271 15.3141 10.01 15.3947C9.99298 15.4754 9.99254 15.5586 10.0087 15.6394L10.015 15.6763C10.1261 16.326 10.4675 16.916 10.9785 17.3414C11.4895 17.7668 12.1371 18.0001 12.8062 18C13.5528 18.0003 14.2691 17.7089 14.7976 17.1896C15.3261 16.6704 15.6237 15.9659 15.625 15.2308C15.625 14.6609 15.45 14.1317 15.1513 13.6923H16.875C17.7038 13.6923 18.4987 13.3681 19.0847 12.7911C19.6708 12.2141 20 11.4314 20 10.6154C20 9.79933 19.6708 9.01671 19.0847 8.43967C18.4987 7.86264 17.7038 7.53846 16.875 7.53846Z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.69 2C8.7518 2.00021 7.84263 2.32033 7.11706 2.90595C6.39148 3.49157 5.89429 4.30654 5.71 5.21231L5.6375 5.57169C5.61823 5.65208 5.61559 5.73546 5.62974 5.81688C5.64389 5.89829 5.67454 5.97606 5.71986 6.04556C5.76519 6.11507 5.82426 6.17487 5.89355 6.22142C5.96285 6.26797 6.04095 6.30031 6.12321 6.31651C6.20547 6.3327 6.29019 6.33243 6.37234 6.31571C6.45449 6.29898 6.53238 6.26614 6.60137 6.21915C6.67035 6.17216 6.72903 6.11198 6.77389 6.04219C6.81875 5.97239 6.84889 5.89442 6.8625 5.81292L6.93625 5.45477C7.0748 4.7832 7.46155 4.18615 8.02159 3.77926C8.58162 3.37237 9.27509 3.1846 9.96769 3.25232C10.6603 3.32004 11.3027 3.63843 11.7705 4.14581C12.2384 4.6532 12.4983 5.31348 12.5 5.99877C12.5 6.73333 12.2037 7.43782 11.6763 7.95735C11.1489 8.47687 10.4335 8.7689 9.6875 8.76923H0.625C0.45924 8.76923 0.300269 8.83407 0.183058 8.94947C0.0658481 9.06488 0 9.22141 0 9.38462C0 9.54783 0.0658481 9.70435 0.183058 9.81976C0.300269 9.93517 0.45924 10 0.625 10H9.6875C10.7475 9.97443 11.7554 9.54194 12.496 8.79485C13.2367 8.04775 13.6514 7.04521 13.6517 6.0012C13.652 4.95719 13.2379 3.9544 12.4978 3.20686C11.7576 2.45931 10.75 2.02621 9.69 2ZM16.875 7.53846C16.0462 7.53846 15.2513 7.86264 14.6653 8.43967C14.0792 9.01671 13.75 9.79933 13.75 10.6154C13.75 10.7786 13.8158 10.9351 13.9331 11.0505C14.0503 11.1659 14.2092 11.2308 14.375 11.2308C14.5408 11.2308 14.6997 11.1659 14.8169 11.0505C14.9342 10.9351 15 10.7786 15 10.6154C15 10.2502 15.11 9.89332 15.316 9.58972C15.522 9.28612 15.8149 9.04949 16.1575 8.90976C16.5001 8.77003 16.8771 8.73347 17.2408 8.8047C17.6045 8.87594 17.9386 9.05177 18.2008 9.30996C18.463 9.56815 18.6416 9.8971 18.714 10.2552C18.7863 10.6133 18.7492 10.9845 18.6073 11.3219C18.4654 11.6592 18.225 11.9475 17.9167 12.1504C17.6084 12.3533 17.2458 12.4615 16.875 12.4615H0.625C0.45924 12.4615 0.300269 12.5264 0.183058 12.6418C0.0658481 12.7572 0 12.9137 0 13.0769C0 13.2401 0.0658481 13.3967 0.183058 13.5121C0.300269 13.6275 0.45924 13.6923 0.625 13.6923H12.8125C13.2269 13.6931 13.624 13.856 13.9164 14.1451C14.2089 14.4342 14.3727 14.8258 14.3719 15.2338C14.371 15.6419 14.2056 16.0329 13.912 16.3208C13.6184 16.6087 13.2207 16.77 12.8062 16.7692C12.433 16.7695 12.0716 16.6396 11.7863 16.4026C11.501 16.1656 11.3101 15.8368 11.2475 15.4745L11.2413 15.4375C11.23 15.3559 11.2023 15.2773 11.1596 15.2065C11.117 15.1356 11.0603 15.0739 10.993 15.025C10.9257 14.9761 10.849 14.941 10.7677 14.9218C10.6863 14.9025 10.6019 14.8996 10.5194 14.9131C10.4368 14.9266 10.3579 14.9563 10.2872 15.0004C10.2166 15.0445 10.1556 15.1022 10.108 15.1699C10.0604 15.2376 10.0271 15.3141 10.01 15.3947C9.99298 15.4754 9.99254 15.5586 10.0087 15.6394L10.015 15.6763C10.1261 16.326 10.4675 16.916 10.9785 17.3414C11.4895 17.7668 12.1371 18.0001 12.8062 18C13.5528 18.0003 14.2691 17.7089 14.7976 17.1896C15.3261 16.6704 15.6237 15.9659 15.625 15.2308C15.625 14.6609 15.45 14.1317 15.1513 13.6923H16.875C17.7038 13.6923 18.4987 13.3681 19.0847 12.7911C19.6708 12.2141 20 11.4314 20 10.6154C20 9.79933 19.6708 9.01671 19.0847 8.43967C18.4987 7.86264 17.7038 7.53846 16.875 7.53846Z\",\n    fill: \"#101828\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.69 2L9.8136 -2.99847L9.75126 -3.00001L9.6889 -3L9.69 2ZM5.71 5.21231L0.810378 4.21542L0.808736 4.22356L5.71 5.21231ZM5.6375 5.57169L10.4997 6.73738L10.5208 6.64926L10.5388 6.56044L5.6375 5.57169ZM6.8625 5.81292L1.96525 4.80449L1.94629 4.89657L1.9308 4.98929L6.8625 5.81292ZM6.93625 5.45477L2.03938 4.4445L2.039 4.44634L6.93625 5.45477ZM12.5 5.99877L17.5 5.99877L17.5 5.98632L12.5 5.99877ZM9.6875 8.76923V13.7692L9.68969 13.7692L9.6875 8.76923ZM0 9.38462H-5H0ZM9.6875 10V15H9.7478L9.80808 14.9985L9.6875 10ZM15 10.6154H20H15ZM0 13.0769H-5H0ZM12.8125 13.6923L12.8223 8.69231H12.8125V13.6923ZM12.8062 16.7692L12.8161 11.7692L12.8027 11.7692L12.8062 16.7692ZM11.2475 15.4745L6.31763 16.309L6.31906 16.3174L6.32051 16.3258L11.2475 15.4745ZM11.2413 15.4375L6.28794 16.1192L6.29848 16.1958L6.31138 16.272L11.2413 15.4375ZM10.0087 15.6394L14.9386 14.8049L14.926 14.7303L14.9111 14.6562L10.0087 15.6394ZM10.015 15.6763L5.08512 16.5108L5.08658 16.5193L10.015 15.6763ZM12.8062 18L12.8084 13L12.8053 13L12.8062 18ZM15.625 15.2308L20.625 15.2398V15.2308H15.625ZM15.1513 13.6923V8.69231H5.70532L11.0165 16.5037L15.1513 13.6923ZM9.6889 -3C7.61603 -2.99955 5.59727 -2.29281 3.97674 -0.984856L10.2574 6.79676C10.088 6.93347 9.88758 6.99996 9.6911 7L9.6889 -3ZM3.97674 -0.984856C2.35462 0.324378 1.22882 2.15886 0.810385 4.21542L10.6096 6.20919C10.5598 6.45423 10.4284 6.65877 10.2574 6.79676L3.97674 -0.984856ZM0.808736 4.22356L0.736237 4.58295L10.5388 6.56044L10.6113 6.20105L0.808736 4.22356ZM0.775281 4.40601C0.59723 5.14868 0.572719 5.9201 0.703591 6.67308L10.5559 4.96068C10.6585 5.55083 10.6392 6.15548 10.4997 6.73738L0.775281 4.40601ZM0.703591 6.67308C0.834446 7.42595 1.11728 8.14125 1.53171 8.77675L9.90801 3.31438C10.2318 3.81088 10.4533 4.37063 10.5559 4.96068L0.703591 6.67308ZM1.53171 8.77675C1.94601 9.41206 2.48245 9.95341 3.10551 10.3719L8.68159 2.0709C9.16606 2.39634 9.58436 2.81807 9.90801 3.31438L1.53171 8.77675ZM3.10551 10.3719C3.7284 10.7904 4.42633 11.0784 5.15715 11.2223L7.08927 1.41072C7.65557 1.52224 8.19729 1.74558 8.68159 2.0709L3.10551 10.3719ZM5.15715 11.2223C5.88787 11.3662 6.64 11.3638 7.36988 11.2152L5.37481 1.41623C5.94039 1.30107 6.52306 1.29922 7.08927 1.41072L5.15715 11.2223ZM7.36988 11.2152C8.09984 11.0666 8.79598 10.774 9.41622 10.3515L3.78651 2.08677C4.26878 1.75826 4.80915 1.53139 5.37481 1.41623L7.36988 11.2152ZM9.41622 10.3515C10.0367 9.92891 10.5696 9.38399 10.9799 8.74587L2.56793 3.3385C2.8884 2.83996 3.30405 2.41541 3.78651 2.08677L9.41622 10.3515ZM10.9799 8.74587C11.3902 8.10753 11.6683 7.39029 11.7942 6.63655L1.9308 4.98929C2.02946 4.39856 2.24732 3.83726 2.56793 3.3385L10.9799 8.74587ZM11.7598 6.82135L11.8335 6.4632L2.039 4.44634L1.96525 4.80449L11.7598 6.82135ZM11.8331 6.46504C11.7173 7.0265 11.3978 7.50664 10.9605 7.82436L5.08268 -0.265839C3.5253 0.865653 2.43232 2.53989 2.03938 4.4445L11.8331 6.46504ZM10.9605 7.82436C10.5253 8.14056 9.99872 8.2792 9.48113 8.22859L10.4542 -1.72395C8.55147 -1.90999 6.63797 -1.39581 5.08268 -0.265839L10.9605 7.82436ZM9.48113 8.22859C8.96306 8.17794 8.46663 7.93864 8.0946 7.53514L15.4465 0.756486C14.1388 -0.66178 12.3575 -1.53785 10.4542 -1.72395L9.48113 8.22859ZM8.0946 7.53514C7.72063 7.12956 7.50145 6.58743 7.50002 6.01122L17.5 5.98632C17.4951 4.03954 16.7561 2.17685 15.4465 0.756486L8.0946 7.53514ZM7.5 5.99877C7.5 5.38241 7.74933 4.80721 8.1675 4.39529L15.1851 11.5194C16.6581 10.0684 17.5 8.08425 17.5 5.99877L7.5 5.99877ZM8.1675 4.39529C8.58305 3.98596 9.13044 3.76947 9.68531 3.76923L9.68969 13.7692C11.7366 13.7683 13.7148 12.9678 15.1851 11.5194L8.1675 4.39529ZM9.6875 3.76923H0.625V13.7692H9.6875V3.76923ZM0.625 3.76923C-0.842035 3.76923 -2.26432 4.34231 -3.32496 5.38664L3.69108 12.5123C2.86486 13.3258 1.76051 13.7692 0.625 13.7692V3.76923ZM-3.32496 5.38664C-4.38823 6.43355 -5 7.87009 -5 9.38462L5 9.38462C5 10.5727 4.51993 11.6962 3.69108 12.5123L-3.32496 5.38664ZM-5 9.38462C-5 10.8991 -4.38823 12.3357 -3.32496 13.3826L3.69108 6.25692C4.51993 7.07302 5 8.19651 5 9.38462L-5 9.38462ZM-3.32496 13.3826C-2.26432 14.4269 -0.842035 15 0.625 15V5C1.76051 5 2.86486 5.44341 3.69108 6.25692L-3.32496 13.3826ZM0.625 15H9.6875V5H0.625V15ZM9.80808 14.9985C12.1481 14.9421 14.3887 13.9876 16.0469 12.315L8.94516 5.2747C9.12203 5.09629 9.34686 5.00676 9.56692 5.00145L9.80808 14.9985ZM16.0469 12.315C17.7075 10.6399 18.651 8.37608 18.6517 6.00276L8.65172 5.99964C8.65181 5.71434 8.76585 5.45557 8.94516 5.2747L16.0469 12.315ZM18.6517 6.00276C18.6525 3.62945 17.7104 1.365 16.0508 -0.311106L8.94474 6.72482C8.76552 6.5438 8.65163 6.28494 8.65172 5.99964L18.6517 6.00276ZM16.0508 -0.311106C14.3937 -1.98475 12.1536 -2.94061 9.8136 -2.99847L9.5664 6.99847C9.34633 6.99303 9.12153 6.90336 8.94474 6.72482L16.0508 -0.311106ZM16.875 2.53846C14.7449 2.53846 12.6868 3.37089 11.1573 4.87684L18.1733 12.0025C17.8159 12.3544 17.3475 12.5385 16.875 12.5385V2.53846ZM11.1573 4.87684C9.62516 6.38537 8.75 8.44802 8.75 10.6154H18.75C18.75 11.1507 18.5333 11.648 18.1733 12.0025L11.1573 4.87684ZM8.75 10.6154C8.75 12.1299 9.36176 13.5664 10.425 14.6134L17.4411 7.48769C18.2699 8.3038 18.75 9.42729 18.75 10.6154H8.75ZM10.425 14.6134C11.4857 15.6577 12.908 16.2308 14.375 16.2308V6.23077C15.5105 6.23077 16.6149 6.67418 17.4411 7.48769L10.425 14.6134ZM14.375 16.2308C15.842 16.2308 17.2643 15.6577 18.325 14.6134L11.3089 7.48769C12.1351 6.67418 13.2395 6.23077 14.375 6.23077V16.2308ZM18.325 14.6134C19.3882 13.5664 20 12.1299 20 10.6154H10C10 9.42729 10.4801 8.3038 11.3089 7.48769L18.325 14.6134ZM20 10.6154C20 11.2566 19.8065 11.8768 19.4533 12.3974L11.1787 6.78208C10.4134 7.90979 10 9.24393 10 10.6154H20ZM19.4533 12.3974C19.1007 12.9169 18.6078 13.3103 18.0457 13.5395L14.2693 4.28C13.0219 4.78871 11.9433 5.65531 11.1787 6.78208L19.4533 12.3974ZM18.0457 13.5395C17.4842 13.7685 16.8708 13.8272 16.2798 13.7115L18.2018 3.89793C16.8833 3.6397 15.5159 3.77157 14.2693 4.28L18.0457 13.5395ZM16.2798 13.7115C15.6884 13.5957 15.1347 13.3079 14.6928 12.8728L21.7088 5.74712C20.7425 4.79565 19.5206 4.15622 18.2018 3.89793L16.2798 13.7115ZM14.6928 12.8728C14.2501 12.4369 13.9396 11.872 13.813 11.2453L23.615 9.26512C23.3437 7.92218 22.676 6.69941 21.7088 5.74712L14.6928 12.8728ZM13.813 11.2453C13.6863 10.6181 13.752 9.96887 13.9985 9.38303L23.2161 13.2607C23.7463 12.0002 23.8864 10.6086 23.615 9.26512L13.813 11.2453ZM13.9985 9.38303C14.2446 8.79803 14.656 8.31058 15.1686 7.97333L20.6648 16.3275C21.7941 15.5845 22.6861 14.5204 23.2161 13.2607L13.9985 9.38303ZM15.1686 7.97333C15.6804 7.63664 16.274 7.46154 16.875 7.46154V17.4615C18.2176 17.4615 19.5363 17.0699 20.6648 16.3275L15.1686 7.97333ZM16.875 7.46154H0.625V17.4615H16.875V7.46154ZM0.625 7.46154C-0.842035 7.46154 -2.26432 8.03462 -3.32496 9.07895L3.69108 16.2046C2.86486 17.0181 1.76051 17.4615 0.625 17.4615V7.46154ZM-3.32496 9.07895C-4.38823 10.1259 -5 11.5624 -5 13.0769H5C5 14.265 4.51993 15.3885 3.69108 16.2046L-3.32496 9.07895ZM-5 13.0769C-5 14.5914 -4.38823 16.028 -3.32496 17.0749L3.69108 9.94923C4.51993 10.7653 5 11.8888 5 13.0769H-5ZM-3.32496 17.0749C-2.26432 18.1192 -0.842035 18.6923 0.625 18.6923V8.69231C1.76051 8.69231 2.86486 9.13572 3.69108 9.94923L-3.32496 17.0749ZM0.625 18.6923H12.8125V8.69231H0.625V18.6923ZM12.8027 18.6923C11.9158 18.6906 11.0505 18.3427 10.4013 17.7009L17.4316 10.5893C16.1975 9.36932 14.538 8.6957 12.8223 8.69232L12.8027 18.6923ZM10.4013 17.7009C9.74948 17.0565 9.36997 16.167 9.37189 15.2237L19.3719 15.244C19.3754 13.4846 18.6683 11.8118 17.4316 10.5893L10.4013 17.7009ZM9.37189 15.2237C9.3738 14.2804 9.7569 13.3926 10.4111 12.751L17.4129 19.8906C18.6544 18.6732 19.3683 17.0033 19.3719 15.244L9.37189 15.2237ZM10.4111 12.751C11.0627 12.1119 11.9292 11.7675 12.8161 11.7692L12.7964 21.7692C14.5121 21.7726 16.1741 21.1055 17.4129 19.8906L10.4111 12.751ZM12.8027 11.7692C13.5894 11.7687 14.3616 12.0418 14.9811 12.5564L8.59149 20.2488C9.7817 21.2374 11.2765 21.7703 12.8098 21.7692L12.8027 11.7692ZM14.9811 12.5564C15.6024 13.0725 16.0326 13.8017 16.1745 14.6231L6.32051 16.3258C6.58766 17.8719 7.39955 19.2587 8.59149 20.2488L14.9811 12.5564ZM16.1774 14.64L16.1711 14.603L6.31138 16.272L6.31763 16.309L16.1774 14.64ZM16.1946 14.7559C16.0906 14.0007 15.8342 13.2772 15.4437 12.6283L6.87554 17.7846C6.57033 17.2774 6.3694 16.7112 6.28794 16.1192L16.1946 14.7559ZM15.4437 12.6283C15.0533 11.9796 14.5379 11.4201 13.9317 10.9797L8.05429 19.0702C7.58273 18.7277 7.18064 18.2916 6.87554 17.7846L15.4437 12.6283ZM13.9317 10.9797C13.3256 10.5395 12.6402 10.2264 11.9169 10.0556L9.61845 19.7879C9.05786 19.6555 8.52568 19.4127 8.05429 19.0702L13.9317 10.9797ZM11.9169 10.0556C11.1937 9.88483 10.4441 9.85885 9.71128 9.97886L11.3274 19.8474C10.7597 19.9404 10.1789 19.9203 9.61845 19.7879L11.9169 10.0556ZM9.71128 9.97886C8.97843 10.0989 8.27382 10.3631 7.63952 10.759L12.935 19.2418C12.442 19.5496 11.8952 19.7544 11.3274 19.8474L9.71128 9.97886ZM7.63952 10.759C7.00504 11.1551 6.45244 11.6759 6.01778 12.2942L14.1983 18.0456C13.8589 18.5284 13.4281 18.934 12.935 19.2418L7.63952 10.759ZM6.01778 12.2942C5.58299 12.9126 5.27582 13.6149 5.11821 14.3603L14.9019 16.4292C14.7783 17.0132 14.5378 17.5627 14.1983 18.0456L6.01778 12.2942ZM5.11821 14.3603C4.96057 15.1058 4.95653 15.8755 5.10637 16.6226L14.9111 14.6562C15.0286 15.2417 15.0254 15.845 14.9019 16.4292L5.11821 14.3603ZM5.07888 16.4739L5.08513 16.5108L14.9449 14.8418L14.9386 14.8049L5.07888 16.4739ZM5.08658 16.5193C5.40043 18.3542 6.36191 20.0039 7.77949 21.1841L14.1775 13.4987C14.5731 13.828 14.8518 14.2979 14.9434 14.8333L5.08658 16.5193ZM7.77949 21.1841C9.19534 22.3628 10.9771 23.0004 12.8072 23L12.8053 13C13.297 12.9999 13.7837 13.1708 14.1775 13.4987L7.77949 21.1841ZM12.8041 23C14.8508 23.0009 16.8295 22.2026 18.3016 20.7564L11.2935 13.6229C11.7086 13.2151 12.2549 12.9998 12.8084 13L12.8041 23ZM18.3016 20.7564C19.7764 19.3075 20.6212 17.325 20.625 15.2398L10.625 15.2218C10.6261 14.6067 10.8758 14.0333 11.2935 13.6229L18.3016 20.7564ZM20.625 15.2308C20.625 13.6205 20.1269 12.1177 19.286 10.881L11.0165 16.5037C10.7731 16.1457 10.625 15.7014 10.625 15.2308H20.625ZM15.1513 18.6923H16.875V8.69231H15.1513V18.6923ZM16.875 18.6923C19.0051 18.6923 21.0632 17.8599 22.5927 16.3539L15.5767 9.22826C15.9341 8.87638 16.4025 8.69231 16.875 8.69231V18.6923ZM22.5927 16.3539C24.1248 14.8454 25 12.7828 25 10.6154H15C15 10.0801 15.2167 9.58273 15.5767 9.22826L22.5927 16.3539ZM25 10.6154C25 8.44802 24.1248 6.38537 22.5927 4.87684L15.5767 12.0025C15.2167 11.648 15 11.1507 15 10.6154H25ZM22.5927 4.87684C21.0632 3.37089 19.0051 2.53846 16.875 2.53846V12.5385C16.4025 12.5385 15.9341 12.3544 15.5767 12.0025L22.5927 4.87684Z\",\n    fill: \"#101828\",\n    mask: \"url(#path-1-inside-1_3_2789)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAc);\nexport default __webpack_public_path__ + \"static/media/AC.a62c3eda070a42c785e7a4ae57fd7308.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"stringValue\":\"FeatureBadge_stringValue__horFM\",\"badge\":\"FeatureBadge_badge__ogSlP\",\"icon\":\"FeatureBadge_icon__Zdf3v\",\"image\":\"FeatureBadge_image__c-mtA\"};","import React from 'react';\nimport Icons from '../../assets/icons-sprite.svg';\nimport Icon from '../../assets/AC.svg';\nimport styles from './FeatureBadge.module.css';\n\nconst FeatureBadge = ({ badgeKey, badgeValue }) => {\n  const renderStringCondition = typeof badgeValue === 'string';\n  const renderAcCondition = badgeKey === 'AC' && badgeValue > 0;\n  const renderNumberCondition =\n    typeof badgeValue === 'number' && badgeValue > 0 && badgeKey !== 'AC';\n  const checkAirConditioner = value =>\n    value === 'airConditioner' ? 'air conditioner' : value;\n\n  return (\n    <>\n      {renderStringCondition && (\n        <div className={styles.badge}>\n          <svg className={styles.icon} width=\"20\" height=\"20\">\n            <use href={`${Icons}#${badgeKey}`}></use>\n          </svg>\n          <p className={styles.stringValue}>{badgeValue}</p>\n        </div>\n      )}\n      {renderAcCondition && (\n        <div className={styles.badge}>\n          <img className={styles.image} src={Icon} alt=\"AC-icon\" />\n          <p>\n            {badgeValue} {badgeKey}\n          </p>\n        </div>\n      )}\n      {renderNumberCondition && (\n        <div className={styles.badge}>\n          <svg className={styles.icon} width=\"20\" height=\"20\">\n            <use href={`${Icons}#${badgeKey}`}></use>\n          </svg>\n          <p>\n            {badgeValue} {checkAirConditioner(badgeKey)}\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FeatureBadge;","import React from 'react';\nimport styles from './FeatureBadgeList.module.css';\nimport FeatureBadge from 'components/FeatureBadge/FeatureBadge';\n\nconst FeatureBadgeList = ({ data, features = false }) => {\n  return (\n    <ul className={`${styles.list} ${features ? styles.featuresList : ''}`}>\n      {Object.entries(data).map(([key, value], idx) => (\n        <FeatureBadge key={idx} badgeKey={key} badgeValue={value} />\n      ))}\n    </ul>\n  );\n};\n\nexport default FeatureBadgeList;\n","import React from 'react';\nimport styles from './FeaturesComponent.module.css';\nimport FeatureBadgeList from 'components/FeatureBadgeList/FeatureBadgeList';\n\nconst FeaturesComponent = ({ data }) => {\n  const { form, length, width, height, tank, consumption } = data;\n  const detailsObject = { form, length, width, height, tank, consumption };\n  const detailsArray = Object.entries(detailsObject);\n\n  const formattedValue = (value, idx) => {\n    return idx !== detailsArray.length - 1\n      ? value.replace(/(\\d)([a-zA-Z])/g, '$1 $2')\n      : value;\n  };\n\n  const detailsBadgeObject = {\n    adults: data.adults,\n    transmission: data.transmission,\n    AC: data.details.AC,\n    engine: data.engine,\n    kitchen: data.details.kitchen,\n    beds: data.details.beds,\n    airConditioner: data.details.airConditioner,\n    CD: data.details.CD,\n    radio: data.details.radio,\n    hob: data.details.hob,\n  };\n\n  return (\n    <div className={styles.featuresSection}>\n      <div>\n        <FeatureBadgeList data={detailsBadgeObject} features=\"true\" />\n      </div>\n      <div>\n        <h3 className={styles.detailsHeadline}>Vehicle details</h3>\n        <ul className={styles.detailsList}>\n          {detailsArray.map(([key, value], idx) => (\n            <li key={idx} className={styles.detailsStroke}>\n              <p className={styles.detailsName}>{key}</p>\n              <p className={idx === 0 ? styles.detailsName : ''}>\n                {formattedValue(value, idx)}\n              </p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default FeaturesComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsSection\":\"ReviewsComponent_reviewsSection__Ftum9\",\"reviewWrapper\":\"ReviewsComponent_reviewWrapper__LY1Ca\",\"headerWrapper\":\"ReviewsComponent_headerWrapper__f+Wv9\",\"avatar\":\"ReviewsComponent_avatar__48Kn5\",\"name\":\"ReviewsComponent_name__r6Ytz\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"IconStarList_wrapper__A1zTK\"};","import React from 'react';\nimport IconStar from 'components/IconStar/IconStar';\nimport styles from './IconStarList.module.css';\n\nconst IconStarList = ({ rating }) => {\n  const filledStars = Array.from({ length: rating }, () => true);\n  const emptyStars = Array.from({ length: 5 - rating }, () => false);\n  const stars = [...filledStars, ...emptyStars];\n\n  return (\n    <ul className={styles.wrapper}>\n      {stars.map((filled, idx) => (\n        <IconStar key={idx} filled={filled} />\n      ))}\n    </ul>\n  );\n};\n\nexport default IconStarList;\n","import React from 'react';\nimport styles from './ReviewsComponent.module.css';\nimport IconStarList from 'components/IconStarList/IconStarList';\nimport TextComponent from 'components/TextComponent/TextComponent';\n\nconst ReviewsComponent = ({ reviews }) => {\n  return (\n    <div className={styles.reviewsSection}>\n      {reviews.map(review => (\n        <div key={Math.floor(Math.random() * 100)} className={styles.reviewWrapper}>\n          <div className={styles.headerWrapper}>\n            <div className={styles.avatar}>{review.reviewer_name[0]}</div>\n            <div>\n              <h3 className={styles.name}>{review.reviewer_name}</h3>\n              <IconStarList rating={review.reviewer_rating} />\n            </div>\n          </div>\n          <TextComponent text={review.comment}/>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ReviewsComponent;\n","import React, { useState } from 'react';\nimport styles from './ModalInfoSection.module.css';\nimport FeaturesComponent from 'components/FeaturesComponent/FeaturesComponent';\nimport ReviewsComponent from 'components/ReviewsComponent/ReviewsComponent';\nimport FormComponent from 'components/FormComponent/FormComponent';\n\nconst ModalInfoSection = ({data}) => {\n  const [activeButton, setActiveButton] = useState('features');\n\n  const handleButtonClick = buttonId => {\n    setActiveButton(buttonId);\n  };\n  return (\n    <div>\n      <div className={styles.buttonsWrapper}>\n        <button\n          className={`${styles.button} ${\n            activeButton === 'features' ? styles.active : ''\n          }`}\n          onClick={() => handleButtonClick('features')}\n        >\n          Features\n        </button>\n        <button\n          className={`${styles.button} ${\n            activeButton === 'reviews' ? styles.active : ''\n          }`}\n          onClick={() => handleButtonClick('reviews')}\n        >\n          Reviews\n        </button>\n      </div>\n\n      <div className={styles.content}>\n        {activeButton === 'features' ? (\n          <FeaturesComponent data={data}/>\n        ) : (\n          <ReviewsComponent reviews={data.reviews}/>\n        )}\n      <FormComponent />\n      </div>\n    </div>\n  );\n};\n\nexport default ModalInfoSection;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"GalleryList_list__+UJLn\"};","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"GalleryItem_image__Im4oQ\"};","import React from 'react'\nimport styles from './GalleryItem.module.css'\n\nconst GalleryItem = ({link, name}) => {\n  return (\n    <img className={styles.image} src={link} alt={name} />\n  )\n}\n\nexport default GalleryItem","import React from 'react';\nimport styles from './GalleryList.module.css';\nimport GalleryItem from 'components/GalleryItem/GalleryItem';\n\nconst GalleryList = ({ gallery, name }) => {\n  return (\n    <ul className={styles.list}>\n      {gallery.map(link => (\n        <GalleryItem key={Math.floor(Math.random() * 100)} link={link} name={name}/>\n      ))}\n    </ul>\n  );\n};\n\nexport default GalleryList;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"AdvertModal_backdrop__erEej\",\"closeBtn\":\"AdvertModal_closeBtn__5N860\",\"modal\":\"AdvertModal_modal__B6+4M\",\"headerContentWrapper\":\"AdvertModal_headerContentWrapper__1r1Ea\",\"ratingWrapper\":\"AdvertModal_ratingWrapper__xIRvQ\",\"mainContentWrapper\":\"AdvertModal_mainContentWrapper__2KHLZ\"};","import Headline from 'components/Headline/Headline';\nimport ModalRatingAndLocation from 'components/ModalRatingAndLocation/ModalRatingAndLocation';\nimport Price from 'components/Price/Price';\nimport ModalInfoSection from 'components/ModalInfoSection/ModalInfoSection';\nimport GalleryList from 'components/GalleryList/GalleryList';\nimport TextComponent from 'components/TextComponent/TextComponent';\nimport ModalWindow from 'components/ModalWindow/ModalWindow';\nimport styles from './AdvertModal.module.css';\n\nconst AdvertModal = ({ onClose, data }) => {\n  return (\n    <ModalWindow onClose={onClose}>\n      <div className={styles.headerContentWrapper}>\n        <Headline headline={data.name} />\n        <div className={styles.ratingWrapper}>\n          <ModalRatingAndLocation\n            reviews={data.reviews}\n            location={data.location}\n          />\n        </div>\n        <Price price={data.price} />\n      </div>\n      <div className={styles.mainContentWrapper}>\n        <GalleryList gallery={data.gallery} name={data.name} />\n        <TextComponent text={data.description} customStyle=\"fullDescription\" />\n        <ModalInfoSection data={data} />\n      </div>\n    </ModalWindow>\n  );\n};\n\nexport default AdvertModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"AdvertsHeader_header__cIq28\",\"priceWrapper\":\"AdvertsHeader_priceWrapper__ZZiW0\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"FavoriteButton_button__O8uhU\",\"favoriteButton\":\"FavoriteButton_favoriteButton__maa4t\",\"icon\":\"FavoriteButton_icon__fLSdN\",\"favoriteIcon\":\"FavoriteButton_favoriteIcon__S2Toq\"};","export const getContacts = state => state.contacts.items;\nexport const getLoader = state => state.contacts.isLoading;\nexport const getFilter = state => state.filter;\n\nexport const getAdverts = state => state.adverts.items;\nexport const getFavorites = state => state.favorites.items;\n","import React from 'react';\nimport Icons from '../../assets/icons-sprite.svg';\nimport styles from './FavoriteButton.module.css';\nimport { useSelector } from 'react-redux';\nimport { getFavorites } from 'store/adverts/adverts-selectors';\n\nconst FavoriteButton = ({ id, handleClick }) => {\n  const favorites = useSelector(getFavorites);\n\n  const isFavorite = id => {\n    return !!favorites.find(item => item._id === id);\n  };\n\n  console.log(isFavorite(id));\n\n  const onFavoriteClick = () => {\n    handleClick(id);\n  };\n\n  return (\n    <button type=\"button\" className={`${styles.button} ${isFavorite(id) ? styles.favoriteButton : ''}`} onClick={onFavoriteClick}>\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={`${styles.icon} ${isFavorite(id) ? styles.favoriteIcon : ''}`}\n      >\n        <use href={`${Icons}#heart`}></use>\n      </svg>\n    </button>\n  );\n};\n\nexport default FavoriteButton;\n","import React from 'react';\nimport Headline from 'components/Headline/Headline';\nimport Price from 'components/Price/Price';\nimport Rating from 'components/ModalRatingAndLocation/ModalRatingAndLocation';\nimport styles from './AdvertsHeader.module.css';\nimport FavoriteButton from 'components/FavoriteButton/FavoriteButton';\n\nconst AdvertsHeader = ({ name, price, reviews, location, id, handleClick }) => {\n  return (\n    <div>\n      <div className={styles.header}>\n        <Headline headline={name} />\n        <div className={styles.priceWrapper}>\n          <Price price={price} />\n          <FavoriteButton id={id} handleClick={handleClick}/>\n        </div>\n      </div>\n      <Rating reviews={reviews} location={location} />\n    </div>\n  );\n};\n\nexport default AdvertsHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"AdvertsItem_listWrapper__mn-yU\",\"listItem\":\"AdvertsItem_listItem__ZfyWW\",\"modalOpen\":\"AdvertsItem_modalOpen__yW-LY\",\"infoWrapper\":\"AdvertsItem_infoWrapper__XfTzb\"};","import React, { useState } from 'react';\nimport AdvertModal from 'components/AdvertModal/AdvertModal';\nimport ButtonMain from 'components/ButtonMain/ButtonMain';\nimport GalleryItem from 'components/GalleryItem/GalleryItem';\nimport AdvertsHeader from 'components/AdvertsHeader/AdvertsHeader';\nimport TextComponent from 'components/TextComponent/TextComponent';\nimport FeatureBadgeList from 'components/FeatureBadgeList/FeatureBadgeList';\nimport styles from './AdvertsItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavorites } from 'store/adverts/adverts-selectors';\nimport { addToFavorites, removeFromFavorites } from 'store/adverts/adverts-slice-favorites';\n\nconst AdvertsListItem = ({ data }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n    showModal\n      ? document.body.classList.remove(styles.modalOpen)\n      : document.body.classList.add(styles.modalOpen);\n  };\n\n  const detailsBadgeObject = {\n    adults: data.adults,\n    transmission: data.transmission,\n    engine: data.engine,\n    kitchen: data.details.kitchen,\n    beds: data.details.beds,\n    AC: data.details.AC,\n  };\n\n  const dispatch = useDispatch();\n  const favorites = useSelector(getFavorites);\n\n  const handleClick =(id) => {\n    if (isFavorite(id)) {\n      dispatch(removeFromFavorites(data));\n    } else {\n      dispatch(addToFavorites(data));\n    }\n  }\n\n  const isFavorite = id => {\n    return !!favorites.find(item => item._id === id);\n  };\n\n  return (\n    <div className={styles.listWrapper}>\n      <li className={styles.listItem}>\n          <GalleryItem link={data.gallery[0]} name={data.name} />\n        <div className={styles.infoWrapper}>\n          <AdvertsHeader\n            name={data.name}\n            price={data.price}\n            reviews={data.reviews}\n            location={data.location}\n            id={data._id}\n            handleClick={handleClick}\n          />\n          <TextComponent\n            text={data.description}\n            customStyle=\"shortDescription\"\n          />\n          <FeatureBadgeList data={detailsBadgeObject} />\n          <div\n            onClick={() => {\n              toggleModal();\n            }}\n          >\n            <ButtonMain text=\"Show more\" />\n          </div>\n        </div>\n      </li>\n      {showModal && <AdvertModal onClose={toggleModal} data={data} />}\n    </div>\n  );\n};\n\nexport default AdvertsListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"adertsListWrapper\":\"AdvertsList_adertsListWrapper__3X9T4\",\"list\":\"AdvertsList_list__vknfo\",\"buttonWrapper\":\"AdvertsList_buttonWrapper__tmFvs\"};","import React, { useEffect, useState } from 'react';\nimport AdvertsListItem from 'components/AdvertsItem/AdvertsItem';\nimport styles from './AdvertsList.module.css';\nimport ButtonMain from 'components/ButtonMain/ButtonMain';\n// import LoaderSpin from 'components/Loader/LoaderSpin';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAdverts } from 'store/adverts/adverts-selectors';\nimport { fetchAdvertsFromApi } from 'store/adverts/adverts-thunk';\n\nconst AdvertsList = () => {\n  const [page, setPage] = useState(1);\n  // const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useDispatch();\n  const adverts = useSelector(getAdverts);\n\n  const totalAdverts = 13;\n\n  useEffect(() => {\n    dispatch(fetchAdvertsFromApi(page));\n  }, [dispatch, page]);\n\n\n  const handleCLick = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <div className={styles.adertsListWrapper}>\n      <ul className={styles.list}>\n        {adverts.map((item, idx) => {\n          return <AdvertsListItem key={idx} data={item} />;\n        })}\n      </ul>\n      {adverts.length < totalAdverts && (\n        <div className={styles.buttonWrapper} onClick={handleCLick}>\n          <ButtonMain text=\"Load more\" className=\"loadMoreButton\" />\n        </div>\n      )}\n     {/* {isLoading && <LoaderSpin />} */}\n    </div>\n  );\n};\n\nexport default AdvertsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"locationWrapper\":\"Geolocation_locationWrapper__ryLOD\"};","import React, { useEffect, useState } from 'react';\nimport IconPin from 'components/IconPin/IconPin';\nimport { fetchLocation } from 'service/location-api';\nimport styles from './Geolocation.module.css';\n\nconst Geolocation = () => {\n  const [city, setCity] = useState('');\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position =>\n        getLocation(position.coords.latitude, position.coords.longitude)\n      );\n    } else {\n      alert('Geolocation is not available in your browser.');\n    }\n  }, []);\n\n  const getLocation = async (lat, lon) => {\n    try {\n      const results = await fetchLocation(lat, lon);\n      if (!results) {\n        return;\n      }\n      setCity(results.address.city);\n      setCountry(results.address.country);\n    } catch (error) {\n      console.log(`Something went wrong: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className={styles.locationWrapper}>\n      <IconPin />\n      {city && country ? (\n        <span>\n          {city}, {country}\n        </span>\n      ) : (\n        <span>Geolocation is blocked</span>\n      )}\n    </div>\n  );\n};\n\nexport default Geolocation;\n","import axios from 'axios';\n\nexport async function fetchLocation(lat, lon) {\n  const { data } = await axios(\n    `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`\n  );\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterSection\":\"Filter_filterSection__N5x2R\",\"wrapper\":\"Filter_wrapper__9Ksqy\",\"filterText\":\"Filter_filterText__QGy-k\",\"location\":\"Filter_location__3ujAf\",\"filterTextWithMargin\":\"Filter_filterTextWithMargin__DXMUG\",\"filterHeadline\":\"Filter_filterHeadline__WQ2RP\",\"lastWrapper\":\"Filter_lastWrapper__B-dS3\"};","var _g;\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAcBig(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 33,\n    viewBox: \"0 0 32 33\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vertical container\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Vector\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"path-1-inside-1_3_2792\",\n    fill: \"white\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5537 5.3C14.2027 5.30031 12.8935 5.7805 11.8487 6.65893C10.8038 7.53736 10.0879 8.75981 9.8225 10.1185L9.7181 10.6575C9.69035 10.7781 9.68654 10.9032 9.70692 11.0253C9.7273 11.1474 9.77143 11.2641 9.8367 11.3683C9.90197 11.4726 9.98703 11.5623 10.0868 11.6321C10.1866 11.702 10.2991 11.7505 10.4175 11.7748C10.536 11.7991 10.658 11.7986 10.7763 11.7736C10.8946 11.7485 11.0067 11.6992 11.1061 11.6287C11.2054 11.5582 11.2899 11.468 11.3545 11.3633C11.4191 11.2586 11.4625 11.1416 11.4821 11.0194L11.5883 10.4822C11.7878 9.47479 12.3447 8.57922 13.1512 7.96889C13.9576 7.35856 14.9562 7.07691 15.9536 7.17849C16.9509 7.28006 17.876 7.75764 18.5497 8.51872C19.2233 9.2798 19.5976 10.2702 19.6001 11.2982C19.6001 12.4 19.1735 13.4567 18.414 14.236C17.6545 15.0153 16.6244 15.4534 15.5501 15.4538H2.5001C2.2614 15.4538 2.03248 15.5511 1.8637 15.7242C1.69492 15.8973 1.6001 16.1321 1.6001 16.3769C1.6001 16.6217 1.69492 16.8565 1.8637 17.0296C2.03248 17.2027 2.2614 17.3 2.5001 17.3H15.5501C17.0765 17.2616 18.5278 16.6129 19.5944 15.4923C20.6609 14.3716 21.2581 12.8678 21.2586 11.3018C21.259 9.73579 20.6627 8.23161 19.5969 7.11028C18.531 5.98896 17.0801 5.33932 15.5537 5.3ZM25.9001 13.6077C24.7066 13.6077 23.562 14.094 22.7181 14.9595C21.8742 15.8251 21.4001 16.999 21.4001 18.2231C21.4001 18.4679 21.4949 18.7027 21.6637 18.8758C21.8325 19.0489 22.0614 19.1462 22.3001 19.1462C22.5388 19.1462 22.7677 19.0489 22.9365 18.8758C23.1053 18.7027 23.2001 18.4679 23.2001 18.2231C23.2001 17.6754 23.3584 17.14 23.6551 16.6846C23.9518 16.2292 24.3735 15.8742 24.8669 15.6646C25.3602 15.455 25.9031 15.4002 26.4268 15.5071C26.9506 15.6139 27.4317 15.8777 27.8093 16.2649C28.1869 16.6522 28.444 17.1456 28.5482 17.6828C28.6524 18.22 28.5989 18.7768 28.3946 19.2828C28.1902 19.7888 27.8441 20.2213 27.4001 20.5256C26.9561 20.8299 26.4341 20.9923 25.9001 20.9923H2.5001C2.2614 20.9923 2.03248 21.0896 1.8637 21.2627C1.69492 21.4358 1.6001 21.6706 1.6001 21.9154C1.6001 22.1602 1.69492 22.395 1.8637 22.5681C2.03248 22.7412 2.2614 22.8385 2.5001 22.8385H20.0501C20.6468 22.8397 21.2187 23.084 21.6398 23.5176C22.0609 23.9513 22.2968 24.5387 22.2956 25.1508C22.2944 25.7628 22.0562 26.3493 21.6334 26.7812C21.2106 27.2131 20.6378 27.4551 20.0411 27.4538C19.5036 27.4542 18.9832 27.2594 18.5724 26.9039C18.1615 26.5484 17.8867 26.0552 17.7965 25.5117L17.7875 25.4563C17.7713 25.3339 17.7313 25.216 17.6699 25.1097C17.6085 25.0034 17.5269 24.9108 17.43 24.8375C17.333 24.7641 17.2227 24.7115 17.1056 24.6826C16.9884 24.6538 16.8668 24.6494 16.748 24.6697C16.6291 24.69 16.5155 24.7345 16.4137 24.8007C16.312 24.8668 16.2242 24.9533 16.1557 25.0549C16.0871 25.1565 16.0391 25.2711 16.0145 25.3921C15.99 25.5131 15.9894 25.6379 16.0127 25.7591L16.0217 25.8145C16.1817 26.7891 16.6733 27.674 17.4091 28.3121C18.145 28.9502 19.0775 29.3002 20.0411 29.3C21.1162 29.3005 22.1475 28.8633 22.9086 28.0845C23.6696 27.3056 24.0982 26.2488 24.1001 25.1462C24.1001 24.2914 23.8481 23.4975 23.4179 22.8385H25.9001C27.0936 22.8385 28.2382 22.3522 29.0821 21.4866C29.926 20.6211 30.4001 19.4472 30.4001 18.2231C30.4001 16.999 29.926 15.8251 29.0821 14.9595C28.2382 14.094 27.0936 13.6077 25.9001 13.6077Z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5537 5.3C14.2027 5.30031 12.8935 5.7805 11.8487 6.65893C10.8038 7.53736 10.0879 8.75981 9.8225 10.1185L9.7181 10.6575C9.69035 10.7781 9.68654 10.9032 9.70692 11.0253C9.7273 11.1474 9.77143 11.2641 9.8367 11.3683C9.90197 11.4726 9.98703 11.5623 10.0868 11.6321C10.1866 11.702 10.2991 11.7505 10.4175 11.7748C10.536 11.7991 10.658 11.7986 10.7763 11.7736C10.8946 11.7485 11.0067 11.6992 11.1061 11.6287C11.2054 11.5582 11.2899 11.468 11.3545 11.3633C11.4191 11.2586 11.4625 11.1416 11.4821 11.0194L11.5883 10.4822C11.7878 9.47479 12.3447 8.57922 13.1512 7.96889C13.9576 7.35856 14.9562 7.07691 15.9536 7.17849C16.9509 7.28006 17.876 7.75764 18.5497 8.51872C19.2233 9.2798 19.5976 10.2702 19.6001 11.2982C19.6001 12.4 19.1735 13.4567 18.414 14.236C17.6545 15.0153 16.6244 15.4534 15.5501 15.4538H2.5001C2.2614 15.4538 2.03248 15.5511 1.8637 15.7242C1.69492 15.8973 1.6001 16.1321 1.6001 16.3769C1.6001 16.6217 1.69492 16.8565 1.8637 17.0296C2.03248 17.2027 2.2614 17.3 2.5001 17.3H15.5501C17.0765 17.2616 18.5278 16.6129 19.5944 15.4923C20.6609 14.3716 21.2581 12.8678 21.2586 11.3018C21.259 9.73579 20.6627 8.23161 19.5969 7.11028C18.531 5.98896 17.0801 5.33932 15.5537 5.3ZM25.9001 13.6077C24.7066 13.6077 23.562 14.094 22.7181 14.9595C21.8742 15.8251 21.4001 16.999 21.4001 18.2231C21.4001 18.4679 21.4949 18.7027 21.6637 18.8758C21.8325 19.0489 22.0614 19.1462 22.3001 19.1462C22.5388 19.1462 22.7677 19.0489 22.9365 18.8758C23.1053 18.7027 23.2001 18.4679 23.2001 18.2231C23.2001 17.6754 23.3584 17.14 23.6551 16.6846C23.9518 16.2292 24.3735 15.8742 24.8669 15.6646C25.3602 15.455 25.9031 15.4002 26.4268 15.5071C26.9506 15.6139 27.4317 15.8777 27.8093 16.2649C28.1869 16.6522 28.444 17.1456 28.5482 17.6828C28.6524 18.22 28.5989 18.7768 28.3946 19.2828C28.1902 19.7888 27.8441 20.2213 27.4001 20.5256C26.9561 20.8299 26.4341 20.9923 25.9001 20.9923H2.5001C2.2614 20.9923 2.03248 21.0896 1.8637 21.2627C1.69492 21.4358 1.6001 21.6706 1.6001 21.9154C1.6001 22.1602 1.69492 22.395 1.8637 22.5681C2.03248 22.7412 2.2614 22.8385 2.5001 22.8385H20.0501C20.6468 22.8397 21.2187 23.084 21.6398 23.5176C22.0609 23.9513 22.2968 24.5387 22.2956 25.1508C22.2944 25.7628 22.0562 26.3493 21.6334 26.7812C21.2106 27.2131 20.6378 27.4551 20.0411 27.4538C19.5036 27.4542 18.9832 27.2594 18.5724 26.9039C18.1615 26.5484 17.8867 26.0552 17.7965 25.5117L17.7875 25.4563C17.7713 25.3339 17.7313 25.216 17.6699 25.1097C17.6085 25.0034 17.5269 24.9108 17.43 24.8375C17.333 24.7641 17.2227 24.7115 17.1056 24.6826C16.9884 24.6538 16.8668 24.6494 16.748 24.6697C16.6291 24.69 16.5155 24.7345 16.4137 24.8007C16.312 24.8668 16.2242 24.9533 16.1557 25.0549C16.0871 25.1565 16.0391 25.2711 16.0145 25.3921C15.99 25.5131 15.9894 25.6379 16.0127 25.7591L16.0217 25.8145C16.1817 26.7891 16.6733 27.674 17.4091 28.3121C18.145 28.9502 19.0775 29.3002 20.0411 29.3C21.1162 29.3005 22.1475 28.8633 22.9086 28.0845C23.6696 27.3056 24.0982 26.2488 24.1001 25.1462C24.1001 24.2914 23.8481 23.4975 23.4179 22.8385H25.9001C27.0936 22.8385 28.2382 22.3522 29.0821 21.4866C29.926 20.6211 30.4001 19.4472 30.4001 18.2231C30.4001 16.999 29.926 15.8251 29.0821 14.9595C28.2382 14.094 27.0936 13.6077 25.9001 13.6077Z\",\n    fill: \"#101828\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5537 5.3L15.6824 0.301658L15.6175 0.299985L15.5526 0.3L15.5537 5.3ZM9.8225 10.1185L4.91522 9.15996L4.9137 9.16781L9.8225 10.1185ZM9.7181 10.6575L14.5907 11.779L14.6103 11.6939L14.6269 11.6082L9.7181 10.6575ZM11.4821 11.0194L6.57702 10.0497L6.55947 10.1385L6.54515 10.2279L11.4821 11.0194ZM11.5883 10.4822L6.68357 9.51074L6.68322 9.51252L11.5883 10.4822ZM19.6001 11.2982L24.6001 11.2982L24.6001 11.2862L19.6001 11.2982ZM15.5501 15.4538V20.4538L15.5524 20.4538L15.5501 15.4538ZM1.6001 16.3769H-3.3999H1.6001ZM15.5501 17.3V22.3H15.6129L15.6757 22.2984L15.5501 17.3ZM23.2001 18.2231H28.2001H23.2001ZM1.6001 21.9154H-3.3999H1.6001ZM20.0501 22.8385L20.0604 17.8385H20.0501V22.8385ZM20.0411 27.4538L20.0514 22.4538L20.0374 22.4538L20.0411 27.4538ZM17.7965 25.5117L12.8612 26.3137L12.8626 26.3218L12.8639 26.3299L17.7965 25.5117ZM17.7875 25.4563L12.8306 26.1112L12.8403 26.1849L12.8522 26.2583L17.7875 25.4563ZM16.0127 25.7591L20.948 24.9571L20.9363 24.8853L20.9225 24.8138L16.0127 25.7591ZM16.0217 25.8145L11.0864 26.6164L11.0878 26.6246L16.0217 25.8145ZM20.0411 29.3L20.0434 24.3H20.0401L20.0411 29.3ZM24.1001 25.1462L29.1001 25.1548V25.1462H24.1001ZM23.4179 22.8385V17.8385H14.1834L19.2309 25.5714L23.4179 22.8385ZM15.5526 0.3C13.0115 0.300581 10.5664 1.2047 8.63104 2.8318L15.0663 10.4861C15.2206 10.3563 15.3939 10.3 15.5548 10.3L15.5526 0.3ZM8.63104 2.8318C6.69848 4.45659 5.39622 6.69742 4.91523 9.15996L14.7298 11.077C14.7795 10.8222 14.9092 10.6181 15.0663 10.4861L8.63104 2.8318ZM4.9137 9.16781L4.8093 9.70689L14.6269 11.6082L14.7313 11.0691L4.9137 9.16781ZM4.84549 9.53609C4.67081 10.295 4.64704 11.0807 4.7751 11.8482L14.6387 10.2024C14.726 10.7257 14.7099 11.2612 14.5907 11.779L4.84549 9.53609ZM4.7751 11.8482C4.90317 12.6158 5.18148 13.3551 5.59869 14.0215L14.0747 8.71519C14.3614 9.17311 14.5514 9.67908 14.6387 10.2024L4.7751 11.8482ZM5.59869 14.0215C6.01607 14.6882 6.56559 15.2707 7.22027 15.7288L12.9534 7.53544C13.4085 7.85388 13.7879 8.25698 14.0747 8.71519L5.59869 14.0215ZM7.22027 15.7288C7.8753 16.1872 8.6206 16.5103 9.4128 16.6728L11.4222 6.87674C11.9775 6.99065 12.4979 7.21674 12.9534 7.53544L7.22027 15.7288ZM9.4128 16.6728C10.2052 16.8353 11.0224 16.8326 11.8136 16.6648L9.73893 6.88235C10.2936 6.76472 10.8668 6.7628 11.4222 6.87674L9.4128 16.6728ZM11.8136 16.6648C12.6047 16.497 13.3476 16.169 13.9995 15.7065L8.21267 7.55095C8.6658 7.22943 9.18448 6.99994 9.73893 6.88235L11.8136 16.6648ZM13.9995 15.7065C14.6509 15.2442 15.1965 14.6583 15.6095 13.9891L7.09948 8.73747C7.38327 8.27761 7.75987 7.87224 8.21267 7.55095L13.9995 15.7065ZM15.6095 13.9891C16.0223 13.3201 16.2959 12.5792 16.419 11.8109L6.54515 10.2279C6.62912 9.70408 6.81587 9.19706 7.09948 8.73747L15.6095 13.9891ZM16.3872 11.989L16.4934 11.4518L6.68322 9.51252L6.57702 10.0497L16.3872 11.989ZM16.493 11.4536C16.4584 11.6284 16.3561 11.8139 16.1685 11.9558L10.1338 3.98196C8.33339 5.34455 7.11722 7.32122 6.68357 9.51074L16.493 11.4536ZM16.1685 11.9558C15.9772 12.1006 15.7192 12.1805 15.4469 12.1528L16.4602 2.20422C14.1933 1.97334 11.938 2.61652 10.1338 3.98196L16.1685 11.9558ZM15.4469 12.1528C15.1758 12.1251 14.9515 11.9975 14.8057 11.8327L22.2936 5.20473C20.8004 3.51779 18.726 2.43499 16.4602 2.20422L15.4469 12.1528ZM14.8057 11.8327C14.6628 11.6713 14.6005 11.4838 14.6001 11.3101L24.6001 11.2862C24.5948 9.05664 23.7839 6.88831 22.2936 5.20473L14.8057 11.8327ZM14.6001 11.2982C14.6001 11.1146 14.67 10.9138 14.8332 10.7463L21.9948 17.7257C23.6769 15.9997 24.6001 13.6854 24.6001 11.2982L14.6001 11.2982ZM14.8332 10.7463C15.0006 10.5745 15.255 10.454 15.5478 10.4538L15.5524 20.4538C17.9938 20.4527 20.3084 19.4561 21.9948 17.7257L14.8332 10.7463ZM15.5501 10.4538H2.5001V20.4538H15.5501V10.4538ZM2.5001 10.4538C0.893894 10.4538 -0.620146 11.1094 -1.7163 12.2337L5.4437 19.2147C4.68511 19.9927 3.62891 20.4538 2.5001 20.4538V10.4538ZM-1.7163 12.2337C-2.80825 13.3537 -3.3999 14.8463 -3.3999 16.3769H6.6001C6.6001 17.4179 6.19809 18.441 5.4437 19.2147L-1.7163 12.2337ZM-3.3999 16.3769C-3.3999 17.9075 -2.80825 19.4002 -1.7163 20.5201L5.4437 13.5391C6.19809 14.3129 6.6001 15.3359 6.6001 16.3769H-3.3999ZM-1.7163 20.5201C-0.620146 21.6444 0.893894 22.3 2.5001 22.3V12.3C3.62891 12.3 4.68511 12.7611 5.4437 13.5391L-1.7163 20.5201ZM2.5001 22.3H15.5501V12.3H2.5001V22.3ZM15.6757 22.2984C18.5466 22.2263 21.2496 21.0058 23.2163 18.9392L15.9724 12.0453C15.8061 12.22 15.6064 12.297 15.4245 12.3016L15.6757 22.2984ZM23.2163 18.9392C25.1791 16.8768 26.2577 14.1345 26.2586 11.3033L16.2586 11.3003C16.2585 11.6011 16.1426 11.8665 15.9724 12.0453L23.2163 18.9392ZM26.2586 11.3033C26.2594 8.47209 25.1825 5.7292 23.2209 3.66553L15.9728 10.555C16.143 10.734 16.2587 10.9995 16.2586 11.3003L26.2586 11.3033ZM23.2209 3.66553C21.2555 1.5978 18.5533 0.375608 15.6824 0.301658L15.4249 10.2983C15.6068 10.303 15.8066 10.3801 15.9728 10.555L23.2209 3.66553ZM25.9001 8.60769C23.3391 8.60769 20.9094 9.65231 19.1381 11.469L26.2981 18.45C26.2147 18.5356 26.0741 18.6077 25.9001 18.6077V8.60769ZM19.1381 11.469C17.371 13.2814 16.4001 15.7132 16.4001 18.2231H26.4001C26.4001 18.2848 26.3774 18.3687 26.2981 18.45L19.1381 11.469ZM16.4001 18.2231C16.4001 19.7537 16.9917 21.2463 18.0837 22.3663L25.2437 15.3853C25.9981 16.159 26.4001 17.1821 26.4001 18.2231H16.4001ZM18.0837 22.3663C19.1799 23.4906 20.6939 24.1462 22.3001 24.1462V14.1462C23.4289 14.1462 24.4851 14.6072 25.2437 15.3853L18.0837 22.3663ZM22.3001 24.1462C23.9063 24.1462 25.4203 23.4906 26.5165 22.3663L19.3565 15.3853C20.1151 14.6072 21.1713 14.1462 22.3001 14.1462V24.1462ZM26.5165 22.3663C27.6085 21.2463 28.2001 19.7537 28.2001 18.2231H18.2001C18.2001 17.1821 18.6021 16.159 19.3565 15.3853L26.5165 22.3663ZM28.2001 18.2231C28.2001 18.6365 28.0812 19.0506 27.8445 19.4139L19.4657 13.9553C18.6357 15.2293 18.2001 16.7142 18.2001 18.2231H28.2001ZM27.8445 19.4139C27.607 19.7784 27.2563 20.082 26.8219 20.2666L22.9118 11.0627C21.4907 11.6665 20.2966 12.68 19.4657 13.9553L27.8445 19.4139ZM26.8219 20.2666C26.386 20.4517 25.8988 20.5023 25.4274 20.4061L27.4263 10.608C25.9074 10.2981 24.3344 10.4583 22.9118 11.0627L26.8219 20.2666ZM25.4274 20.4061C24.9568 20.3101 24.5424 20.0766 24.2293 19.7554L31.3893 12.7744C30.321 11.6787 28.9444 10.9177 27.4263 10.608L25.4274 20.4061ZM24.2293 19.7554C23.9175 19.4357 23.7189 19.0434 23.6397 18.6348L33.4568 16.7309C33.1691 15.2479 32.4563 13.8688 31.3893 12.7744L24.2293 19.7554ZM23.6397 18.6348C23.5605 18.2267 23.6001 17.8024 23.7584 17.4105L33.0308 21.1552C33.5978 19.7512 33.7443 18.2133 33.4568 16.7309L23.6397 18.6348ZM23.7584 17.4105C23.9171 17.0175 24.1941 16.6613 24.5736 16.4012L30.2266 24.65C31.4942 23.7813 32.4633 22.5602 33.0308 21.1552L23.7584 17.4105ZM24.5736 16.4012C24.9548 16.14 25.4166 15.9923 25.9001 15.9923V25.9923C27.4516 25.9923 28.9575 25.5198 30.2266 24.65L24.5736 16.4012ZM25.9001 15.9923H2.5001V25.9923H25.9001V15.9923ZM2.5001 15.9923C0.893894 15.9923 -0.620146 16.6479 -1.7163 17.7722L5.4437 24.7532C4.68511 25.5312 3.62891 25.9923 2.5001 25.9923V15.9923ZM-1.7163 17.7722C-2.80825 18.8921 -3.3999 20.3848 -3.3999 21.9154H6.6001C6.6001 22.9564 6.19809 23.9794 5.4437 24.7532L-1.7163 17.7722ZM-3.3999 21.9154C-3.3999 23.446 -2.80825 24.9386 -1.7163 26.0586L5.4437 19.0776C6.19809 19.8513 6.6001 20.8744 6.6001 21.9154H-3.3999ZM-1.7163 26.0586C-0.620146 27.1829 0.893894 27.8385 2.5001 27.8385V17.8385C3.62891 17.8385 4.68511 18.2996 5.4437 19.0776L-1.7163 26.0586ZM2.5001 27.8385H20.0501V17.8385H2.5001V27.8385ZM20.0398 27.8385C19.2691 27.8369 18.557 27.5202 18.0528 27.001L25.2267 20.0343C23.8803 18.6478 22.0246 17.8425 20.0604 17.8385L20.0398 27.8385ZM18.0528 27.001C17.5528 26.486 17.2943 25.8148 17.2956 25.141L27.2956 25.1605C27.2993 23.2627 26.569 21.4165 25.2267 20.0343L18.0528 27.001ZM17.2956 25.141C17.2969 24.4672 17.558 23.7968 18.0604 23.2836L25.2064 30.2789C26.5544 28.9018 27.2919 27.0584 27.2956 25.1605L17.2956 25.141ZM18.0604 23.2836C18.567 22.7661 19.2806 22.4523 20.0514 22.4539L20.0308 32.4538C21.9951 32.4579 23.8542 31.6602 25.2064 30.2789L18.0604 23.2836ZM20.0374 22.4538C20.7169 22.4533 21.356 22.7006 21.844 23.1228L15.3008 30.685C16.6105 31.8182 18.2903 32.4551 20.0448 32.4538L20.0374 22.4538ZM21.844 23.1228C22.329 23.5425 22.6312 24.1035 22.7291 24.6935L12.8639 26.3299C13.1421 28.0069 13.994 29.5543 15.3008 30.685L21.844 23.1228ZM22.7318 24.7097L22.7228 24.6543L12.8522 26.2583L12.8612 26.3137L22.7318 24.7097ZM22.7444 24.8014C22.6428 24.0324 22.3911 23.2866 21.9994 22.6085L13.3405 27.6109C13.0716 27.1454 12.8998 26.6354 12.8306 26.1112L22.7444 24.8014ZM21.9994 22.6085C21.6074 21.9301 21.0816 21.3305 20.4471 20.8504L14.4129 28.8246C13.9722 28.4911 13.6096 28.0767 13.3405 27.6109L21.9994 22.6085ZM20.4471 20.8504C19.8122 20.37 19.0826 20.0199 18.3 19.8274L15.9111 29.5379C15.3628 29.403 14.8538 29.1583 14.4129 28.8246L20.4471 20.8504ZM18.3 19.8274C17.5172 19.6348 16.7028 19.6052 15.9072 19.7409L17.5888 29.5985C17.0308 29.6937 16.4597 29.6728 15.9111 29.5379L18.3 19.8274ZM15.9072 19.7409C15.1117 19.8766 14.3573 20.1737 13.688 20.609L19.1395 28.9924C18.6737 29.2953 18.1466 29.5033 17.5888 29.5985L15.9072 19.7409ZM13.688 20.609C13.0191 21.044 12.4508 21.6066 12.0113 22.2576L20.3 27.8521C19.9977 28.3 19.6049 28.6897 19.1395 28.9924L13.688 20.609ZM12.0113 22.2576C11.5721 22.9084 11.269 23.6364 11.1145 24.3974L20.9146 26.3868C20.8092 26.9059 20.6021 27.4045 20.3 27.8521L12.0113 22.2576ZM11.1145 24.3974C10.96 25.1582 10.9561 25.9421 11.1029 26.7044L20.9225 24.8138C21.0226 25.3336 21.0199 25.8679 20.9146 26.3868L11.1145 24.3974ZM11.0774 26.5611L11.0864 26.6164L20.957 25.0125L20.948 24.9571L11.0774 26.5611ZM11.0878 26.6246C11.4341 28.734 12.5018 30.6747 14.1334 32.0895L20.6849 24.5346C20.8448 24.6732 20.9293 24.8441 20.9556 25.0043L11.0878 26.6246ZM14.1334 32.0895C15.7679 33.507 17.8605 34.3004 20.0421 34.3L20.0401 24.3C20.2945 24.2999 20.5221 24.3933 20.6849 24.5346L14.1334 32.0895ZM20.0388 34.3C22.4802 34.3011 24.796 33.3071 26.4847 31.5789L19.3325 24.59C19.4991 24.4195 19.7522 24.2999 20.0434 24.3L20.0388 34.3ZM26.4847 31.5789C28.1693 29.855 29.096 27.5422 29.1001 25.1548L19.1001 25.1375C19.1004 24.9555 19.17 24.7562 19.3325 24.59L26.4847 31.5789ZM29.1001 25.1462C29.1001 23.2972 28.5525 21.5573 27.6049 20.1055L19.2309 25.5714C19.1437 25.4378 19.1001 25.2856 19.1001 25.1462H29.1001ZM23.4179 27.8385H25.9001V17.8385H23.4179V27.8385ZM25.9001 27.8385C28.4611 27.8385 30.8908 26.7938 32.6621 24.9771L25.5021 17.9961C25.5855 17.9106 25.7261 17.8385 25.9001 17.8385V27.8385ZM32.6621 24.9771C34.4292 23.1648 35.4001 20.733 35.4001 18.2231H25.4001C25.4001 18.1613 25.4228 18.0774 25.5021 17.9961L32.6621 24.9771ZM35.4001 18.2231C35.4001 15.7132 34.4292 13.2814 32.6621 11.469L25.5021 18.45C25.4228 18.3687 25.4001 18.2848 25.4001 18.2231H35.4001ZM32.6621 11.469C30.8908 9.65231 28.4611 8.60769 25.9001 8.60769V18.6077C25.7261 18.6077 25.5855 18.5356 25.5021 18.45L32.6621 11.469Z\",\n    fill: \"#101828\",\n    mask: \"url(#path-1-inside-1_3_2792)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcBig);\nexport default __webpack_public_path__ + \"static/media/AC-big.3fa8d876573e81d0e423faf46aa4efed.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"badge\":\"FilterBadge_badge__5RS3G\"};","import React from 'react';\nimport Icon from '../../assets/AC-big.svg';\nimport Icons from '../../assets/icons-sprite.svg';\nimport styles from './FilterBadge.module.css';\n\nconst FilterBadge = ({ badgeKey, badgeValue, camper = false }) => {\n  const renderAcCondition = badgeKey === 'AC';\n\n  return (\n    <>\n      {renderAcCondition && (\n        <button className={styles.badge}>\n          <img className={styles.image} src={Icon} alt=\"AC-icon\" />\n          <p>{badgeValue}</p>\n        </button>\n      )}\n      {!renderAcCondition && (\n        <button className={styles.badge}>\n          <svg\n            className={styles.icon}\n            width={camper ? 40 : 32}\n            height={camper ? 28 : 32}\n          >\n            <use href={`${Icons}#${badgeKey}-big`}></use>\n          </svg>\n          <p className={styles.stringValue}>{badgeValue}</p>\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default FilterBadge;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"FilterBadgeList_list__avjGU\"};","import React from 'react';\nimport FilterBadge from 'components/FilterBadge/FilterBadge';\nimport styles from './FilterBadgeList.module.css';\n\nconst FilterBadgeList = ({data, camper}) => {\n    return (\n        <ul className={styles.list}>\n          {Object.entries(data).map(([key, value], idx) => (\n            <FilterBadge key={idx} badgeKey={key} badgeValue={value} camper={camper}/>\n          ))}\n        </ul>\n      );\n};\n\nexport default FilterBadgeList;\n","import React from 'react';\nimport Geolocation from 'components/Geolocation/Geolocation';\nimport styles from './Filter.module.css';\nimport FilterBadgeList from 'components/FilterBadgeList/FilterBadgeList';\nimport ButtonMain from 'components/ButtonMain/ButtonMain';\n\nconst Filter = () => {\n  const vehicleEquipment = {\n    AC: 'AC',\n    transmission: 'Automatic',\n    kitchen: 'Kitchen',\n    TV: 'TV',\n    shower: 'Shower/WC',\n  };\n\n  const vehicleType = {\n    van: 'Van',\n    fully: 'Fully Integrated',\n    alcove: 'Alcove',\n  };\n\n  return (\n    <div className={styles.filterSection}>\n      <div className={styles.wrapper}>\n        <p className={styles.filterText}>Location</p>\n        <div className={styles.location}>\n          <Geolocation/>\n        </div>\n      </div>\n      <div className={styles.wrapper}>\n        <p className={`${styles.filterText} ${styles.filterTextWithMargin}`}>\n          Filters\n        </p>\n        <h3 className={styles.filterHeadline}>Vehicle equipment</h3>\n        <FilterBadgeList data={vehicleEquipment} />\n      </div>\n      <div className={styles.lastWrapper}>\n        <h3 className={styles.filterHeadline}>Vehicle type</h3>\n        <FilterBadgeList data={vehicleType} camper={true} />\n      </div>\n      <ButtonMain text='Search' className='searchButton'/>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Container from 'components/Container/Container';\nimport AdvertsList from 'components/AdvertsList/AdvertsList';\nimport Filter from 'components/Filter/Filter';\n\nconst CatalogPage = () => {\n  return (\n    <Container>\n      <Filter />\n      <AdvertsList />\n    </Container>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["_ref","children","_jsx","className","styles","headline","filled","width","height","href","concat","Icons","size","location","reverseLocation","split","reverse","join","_jsxs","IconPin","reviews","IconStar","averageRating","rating","reduce","acc","review","reviewer_rating","Math","floor","length","Location","price","toFixed","badgeKey","badgeValue","renderStringCondition","renderAcCondition","renderNumberCondition","_Fragment","src","Icon","alt","value","data","features","Object","entries","map","_ref2","idx","key","FeatureBadge","form","tank","consumption","detailsObject","detailsArray","formattedValue","replace","detailsBadgeObject","adults","transmission","AC","details","engine","kitchen","beds","airConditioner","CD","radio","hob","FeatureBadgeList","stars","Array","from","reviewer_name","IconStarList","TextComponent","text","comment","random","activeButton","setActiveButton","useState","handleButtonClick","buttonId","onClick","FeaturesComponent","ReviewsComponent","FormComponent","link","name","gallery","GalleryItem","onClose","ModalWindow","Headline","ModalRatingAndLocation","Price","GalleryList","description","customStyle","ModalInfoSection","getAdverts","state","adverts","items","getFavorites","favorites","id","handleClick","useSelector","isFavorite","find","item","_id","console","log","type","onFavoriteClick","FavoriteButton","Rating","showModal","setShowModal","toggleModal","prevState","document","body","classList","remove","add","dispatch","useDispatch","AdvertsHeader","removeFromFavorites","addToFavorites","ButtonMain","AdvertModal","AdvertsList","page","setPage","useEffect","fetchAdvertsFromApi","AdvertsListItem","handleCLick","Geolocation","city","setCity","country","setCountry","navigator","geolocation","getCurrentPosition","position","getLocation","coords","latitude","longitude","alert","async","lat","lon","results","axios","fetchLocation","address","error","message","camper","FilterBadge","Filter","FilterBadgeList","TV","shower","van","fully","alcove","CatalogPage","Container"],"sourceRoot":""}